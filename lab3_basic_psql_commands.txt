Script started on Tue Sep 9 10:07:22 2025

% admin@MacBook-Air database_auca % psql -U postgres -h localhost -p 5432
psql (14.19 (Homebrew), server 17.6 (Homebrew))
WARNING: psql major version 14, server major version 17.
 Some psql features might not work.
Type "help" for help.

postgres=# \l
 List of databases
 Name | Owner | Encoding | Collate | Ctype | Access privileges 
-----------+-------+----------+---------+-------+-------------------
 auca_lab | admin | UTF8 | C | C | 
 postgres | admin | UTF8 | C | C | 
 template0 | admin | UTF8 | C | C | =c/admin +
 | | | | | admin=CTc/admin
 template1 | admin | UTF8 | C | C | =c/admin +
 | | | | | admin=CTc/admin
(4 rows)

postgres=# \c auca_lab
psql (14.19 (Homebrew), server 17.6 (Homebrew))
WARNING: psql major version 14, server major version 17.
 Some psql features might not work.
You are now connected to database "auca_lab" as user "postgres".
auca_lab=# \dt
Did not find any relations.
auca_lab=# CREATE TABLE students (id SERIAL PRIMARY KEY, name VARCHAR(100), age INT);
CREATE TABLE
auca_lab=# \d students
 Table "public.students"
 Column | Type | Collation | Nullable | Default 
--------+------------------------+-----------+----------+--------------------------------------
 id | integer | | not null | nextval('students_id_seq'::regclass)
 name | character varying(100) | | | 
 age | integer | | | 
Indexes:
 "students_pkey" PRIMARY KEY, btree (id)

auca_lab=# \dt
 List of relations
 Schema | Name | Type | Owner 
--------+----------+-------+----------
 public | students | table | postgres
(1 row)

auca_lab=# INSERT INTO students (name, age) VALUES ('Alice', 21), ('Bob', 23);
INSERT 0 2
auca_lab=# SELECT * FROM students;
 id | name | age 
----+-------+-----
 1 | Alice | 21
 2 | Bob | 23
(2 rows)

auca_lab=# \h SELECT\h SELECT
Command: SELECT
Description: retrieve rows from a table or view
Syntax:
[ WITH [ RECURSIVE ] with_query [, ...] ]
SELECT [ ALL | DISTINCT [ ON ( expression [, ...] ) ] ]
 [ { * | expression [ [ AS ] output_name ] } [, ...] ]
 [ FROM from_item [, ...] ]
 [ WHERE condition ]
 [ GROUP BY [ ALL | DISTINCT ] grouping_element [, ...] ]
 [ HAVING condition ]
 [ WINDOW window_name AS ( window_definition ) [, ...] ]
 [ { UNION | INTERSECT | EXCEPT } [ ALL | DISTINCT ] select ]
 [ ORDER BY expression [ ASC | DESC | USING operator ] [ NULLS { FIRST | LAST } ] [, ...] ]
 [ LIMIT { count | ALL } ]
 [ OFFSET start [ ROW | ROWS ] ]
 [ FETCH { FIRST | NEXT } [ count ] { ROW | ROWS } { ONLY | WITH TIES } ]
 [ FOR { UPDATE | NO KEY UPDATE | SHARE | KEY SHARE } [ OF table_name [, ...] ] [ NOWAIT | SKIP LOCKED ] [...] ]

where from_item can be one of:

 [ ONLY ] table_name [ * ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]
 [ TABLESAMPLE sampling_method ( argument [, ...] ) [ REPEATABLE ( seed ) ] ]
 [ LATERAL ] ( select ) [ AS ] alias [ ( column_alias [, ...] ) ]
 with_query_name [ [ AS ] alias [ ( column_alias [, ...] ) ] ]
 [ LATERAL ] function_name ( [ argument [, ...] ] )
 [ WITH ORDINALITY ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]
 [ LATERAL ] function_name ( [ argument [, ...] ] ) [ AS ] alias ( column_definition [, ...] )
 [ LATERAL ] function_name ( [ argument [, ...] ] ) AS ( column_definition [, ...] )
 [ LATERAL ] ROWS FROM( function_name ( [ argument [, ...] ] ) [ AS ( column_definition [, ...] ) ] [, ...] )
 [ WITH ORDINALITY ] [ [ AS ] alias [ ( column_alias [, ...] ) ] ]
 from_item join_type from_item { ON join_condition | USING ( join_column [, ...] ) [ AS join_using_alias ] }
 from_item NATURAL join_type from_item
 from_item CROSS JOIN from_item

and grouping_element can be one of:

 ( )
 expression
 ( expression [, ...] )
 ROLLUP ( { expression | ( expression [, ...] ) } [, ...] )
 CUBE ( { expression | ( expression [, ...] ) } [, ...] )
 GROUPING SETS ( grouping_element [, ...] )

and with_query is:

 with_query_name [ ( column_name [, ...] ) ] AS [ [ NOT ] MATERIALIZED ] ( select | values | insert | update | delete )
 [ SEARCH { BREADTH | DEPTH } FIRST BY column_name [, ...] SET search_seq_col_name ]
 [ CYCLE column_name [, ...] SET cycle_mark_col_name [ TO cycle_mark_value DEFAULT cycle_mark_default ] USING cycle_path_col_name ]

TABLE [ ONLY ] table_name [ * ]

URL: https://www.postgresql.org/docs/14/sql-select.html

auca_lab=# \?
General
 \copyright show PostgreSQL usage and distribution terms
 \crosstabview [COLUMNS] execute query and display results in crosstab
 \errverbose show most recent error message at maximum verbosity
 \g [(OPTIONS)] [FILE] execute query (and send results to file or |pipe);
 \g with no arguments is equivalent to a semicolon
 \gdesc describe result of query, without executing it
 \gexec execute query, then execute each value in its result
 \gset [PREFIX] execute query and store results in psql variables
 \gx [(OPTIONS)] [FILE] as \g, but forces expanded output mode
 \q quit psql
 \restrict RESTRICT_KEY
 enter restricted mode with provided key
 \unrestrict RESTRICT_KEY
 exit restricted mode if key matches
 \watch [SEC] execute query every SEC seconds

Help
 \? [commands] show help on backslash commands
 \? options show help on psql command-line options
 \? variables show help on special variables
 \h [NAME] help on syntax of SQL commands, * for all commands

Query Buffer
 \e [FILE] [LINE] edit the query buffer (or file) with external editor
 \ef [FUNCNAME [LINE]] edit function definition with external editor
 \ev [VIEWNAME [LINE]] edit view definition with external editor
 \p show the contents of the query buffer
 \r reset (clear) the query buffer
 \s [FILE] display history or save it to file
 \w FILE write query buffer to file

Input/Output
 \copy ... perform SQL COPY with data stream to the client host
 \echo [-n] [STRING] write string to standard output (-n for no newline)
 \i FILE execute commands from file
 \ir FILE as \i, but relative to location of current script
 \o [FILE] send all query results to file or |pipe
 \qecho [-n] [STRING] write string to \o output stream (-n for no newline)
 \warn [-n] [STRING] write string to standard error (-n for no newline)

Conditional
 \if EXPR begin conditional block
 \elif EXPR alternative within current conditional block
 \else final alternative within current conditional block
 \endif end conditional block

Informational
 (options: S = show system objects, + = additional detail)
 \d[S+] list tables, views, and sequences
 \d[S+] NAME describe table, view, sequence, or index
 \da[S] [PATTERN] list aggregates
 \dA[+] [PATTERN] list access methods
 \dAc[+] [AMPTRN [TYPEPTRN]] list operator classes
 \dAf[+] [AMPTRN [TYPEPTRN]] list operator families
 \dAo[+] [AMPTRN [OPFPTRN]] list operators of operator families
 \dAp[+] [AMPTRN [OPFPTRN]] list support functions of operator families
 \db[+] [PATTERN] list tablespaces
 \dc[S+] [PATTERN] list conversions
 \dC[+] [PATTERN] list casts
 \dd[S] [PATTERN] show object descriptions not displayed elsewhere
 \dD[S+] [PATTERN] list domains
 \ddp [PATTERN] list default privileges
 \dE[S+] [PATTERN] list foreign tables
 \des[+] [PATTERN] list foreign servers
 \det[+] [PATTERN] list foreign tables
 \deu[+] [PATTERN] list user mappings
 \dew[+] [PATTERN] list foreign-data wrappers
 \df[anptw][S+] [FUNCPTRN [TYPEPTRN ...]]
 list [only agg/normal/procedure/trigger/window] functions
 \dF[+] [PATTERN] list text search configurations
 \dFd[+] [PATTERN] list text search dictionaries
 \dFp[+] [PATTERN] list text search parsers
 \dFt[+] [PATTERN] list text search templates
 \dg[S+] [PATTERN] list roles
 \di[S+] [PATTERN] list indexes
 \dl list large objects, same as \lo_list
 \dL[S+] [PATTERN] list procedural languages
 \dm[S+] [PATTERN] list materialized views
 \dn[S+] [PATTERN] list schemas
 \do[S+] [OPPTRN [TYPEPTRN [TYPEPTRN]]]
 list operators
 \dO[S+] [PATTERN] list collations
 \dp [PATTERN] list table, view, and sequence access privileges
 \dP[itn+] [PATTERN] list [only index/table] partitioned relations [n=nested]
 \drds [ROLEPTRN [DBPTRN]] list per-database role settings
 \dRp[+] [PATTERN] list replication publications
 \dRs[+] [PATTERN] list replication subscriptions
 \ds[S+] [PATTERN] list sequences
 \dt[S+] [PATTERN] list tables
 \dT[S+] [PATTERN] list data types
 \du[S+] [PATTERN] list roles
 \dv[S+] [PATTERN] list views
 \dx[+] [PATTERN] list extensions
 \dX [PATTERN] list extended statistics
 \dy[+] [PATTERN] list event triggers
 \l[+] [PATTERN] list databases
 \sf[+] FUNCNAME show a function's definition
 \sv[+] VIEWNAME show a view's definition
 \z [PATTERN] same as \dp

Formatting
 \a toggle between unaligned and aligned output mode
 \C [STRING] set table title, or unset if none
 \f [STRING] show or set field separator for unaligned query output
 \H toggle HTML output mode (currently off)
 \pset [NAME [VALUE]] set table output option
 (border|columns|csv_fieldsep|expanded|fieldsep|
 fieldsep_zero|footer|format|linestyle|null|
 numericlocale|pager|pager_min_lines|recordsep|
 recordsep_zero|tableattr|title|tuples_only|
 unicode_border_linestyle|unicode_column_linestyle|
 unicode_header_linestyle)
 \t [on|off] show only rows (currently off)
 \T [STRING] set HTML <table> tag attributes, or unset if none
 \x [on|off|auto] toggle expanded output (currently off)

Connection
 \c[onnect] {[DBNAME|- USER|- HOST|- PORT|-] | conninfo}
 connect to new database (currently "auca_lab")
 \conninfo display information about current connection
 \encoding [ENCODING] show or set client encoding
 \password [USERNAME] securely change the password for a user

Operating System
 \cd [DIR] change the current working directory
 \setenv NAME [VALUE] set or unset environment variable
 \timing [on|off] toggle timing of commands (currently off)
 \! [COMMAND] execute command in shell or start interactive shell

Variables
 \prompt [TEXT] NAME prompt user to set internal variable
 \set [NAME [VALUE]] set internal variable, or list all if no parameters
 \unset NAME unset (delete) internal variable

Large Objects
 \lo_export LOBOID FILE
 \lo_import FILE [COMMENT]
 \lo_list
 \lo_unlink LOBOID large object operations
auca_lab=# DROP TABLE students;
DROP TABLE
auca_lab=# \q
% admin@MacBook-Air database_auca % 
% admin@MacBook-Air database_auca % exitexit

Script done on Tue Sep 9 10:09:36 2025
